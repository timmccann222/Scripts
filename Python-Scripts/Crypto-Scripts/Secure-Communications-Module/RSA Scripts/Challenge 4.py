from Crypto.PublicKey import RSA
import binascii

# Private RSA Key
key = """-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAlVmF7X4kiOIn5VKe/TYXBzvg6guyUFQjCr5rNTN+AonEgO1k
AVU76EY+8KhnQU81mO87+x1bqBGRmvM88xspXqjcif5AO9YEu7j4ssHuFk8yIr/g
cGKwnzNF78oPST9UYxZi61dpIKcbh7dJNXd4fLSIu5OGfOKw0SuJ4qTgvcz+MdBU
kYtlQdp5hnSIqpBPCKfd8kRAU4e+gR8vm4mhY5b8EiEvOaoUJC5KF/ykyfeFz3l4
vWZcZn1R+MGNJ7bjDhhq1Dwaxew1hEPJGTj3gLzsifk4RYi8znCHGoNR0aK56st/
NtWUYSvdbN7lULH26SgozR4FpRGgj06lbAXocQIDAQABAoIBAGn0pFZ0WrkeMY25
SwB7gmTob028VJo2xtGVfHu291wXn2iUgpGLhb/pLjgQUYj9CBpjB5vFHUSkijdy
/7e9emEkzam8zpdk4+DGfvJbMW10bC5JEJLLAWFAwAo5wRSHMHhH5o/uaK/4vkhP
mUmsY7edYTAqnow1S5pqGB3KOYONOQf4IhwgqgsO368kEU6uqVCIeroXEb4Cb8vt
qj45+s9FaxdbW+15fzcRyJU6EKZiewcNk1j3qVwcLmPnb3nVXgiKyfg8kkRXxrLr
rY0MizMvc3IUFvr/BkvZNYtN/aKGv7MNAfkEoUf35QPz2rArThABG3VwwGzKEUE1
ICQ63A0CgYEAxYxEM7z2PEi+3lN2tjKggBWxlh/RoP+yuwf5xEdunoxoDpeDU8op
8k5sm1DYQcilhOJKwlXbC/V4bpkFE706ea0MuYVMV1CvWw1R2MNiD08tS2ej5k9Q
Ww7B9rJe3rfc6cQemf4Wf2OU3DMVmXdX7hKZhTTbYKUsXntPYA16gtMCgYEAwYpe
d4EA2Ed1Ti5+lndBEi0GCu8V3T9FlYtoLDQFYMElrPYV4r4tsABg1xTfMDtt+ige
288chXWvZ798aQXxPlbkxgsuwpED3GHjX3giuQq+8yMYfWoX47ZbhVp+4q6JTofa
EPSXGJPCOKIUwe92tVU4ltcFjnop80lD6t8K9SsCgYBJGYVnS8YmOpj+dg4Yj5Va
sCxdq/qLQ/MkSGhBHFmvq68ZrzE2gTmSYzjHJFxRw2iUSpR1YwXCYBwneNIrIruP
qNxrjgrYyI+K9tvRhUM0/Qx6uagpojHO8CAQJKL8cTb6/cqBG0fB7dx4uyKD/mh4
PUO3yf5fvd80Oxb9KR+rZwKBgBkudrIXz9NUINgmRoQvSgEiaIndp7ucsuINPGWb
8yMunkdN0XUqB2nB8tepOIze/qUwuSsiXHSk5kiaaoaDpmrVBXkbFV9tXNI8zkeq
quHmmwephlMzDZ6sKGZGawH1cZoNJPtVx58EAp45wHenP4vCZdWCbo+mJ3UnEDYs
BRH3AoGAYu83TpvPqLP3T2ukzRHo+wC+vFhuxEuT8bA0M/MOyxDxuLyW+PmNSpnN
Y0CWHR0JHxLWnfyQcXp/KBmJf3JoWbblblufQkX6av9W6FyekgBYyv+1vrWf8+7B
j9JevlTWCoaiKFVYOsPcvRrqoXKg9OiCvChU6oxE9uuuXLD18TE=
-----END RSA PRIVATE KEY-----"""

public_key = RSA.importKey(key)

# Extract Key Components from RSA Private Key
print(public_key.n)
print("")

print(public_key.e)
print("")

print(public_key.d)
print("")

# Cipher text to be decrypted
c = 474862643754336865489984490773307542016161159436213530034995807183836312346778617047666360854948178434525541089212091928949344492697684657497682106740050084305554758259427768463395264318566101255923490595579348647860471822284428834756812967844672795316325109976652375135659724572710513755433401072885408968307124213606768098411795080747616961236626790699862671834311406129266854138764009952421206625693567227556664511584573464971029270576495696636132292906861410359486612705079004947333371264698887189359265840678094723729950785568382017843975809503403984016678927664449791524785943376314787680072596720311587221852

# Modulus
n = 18853652953049188242336661023474694681403881309878986425409216043017213913952551838437233278291201494278030225438423753086629496781812361693251379734566653899543664564981866702904611711363976892104695010642811126981547153591680314594664932549613655600983735220414959440091676342582001304658880983317370207071017912749708867439456817830671352394856410980322587798163591738100869833725982452705303564836891679123009990229245741053299928517784504305669338797676087628875115816422530132538784870010392885599733339159196885607207889222498406557705959624699772843815158530925779549620235527708046282705348132258809513371761

# Exponent
e = 65537

# Private Value
d = 13375659460335718866097670846795793661776911691148869704890390160063557393979338354336316298795328035711994984997169727020810205729135690631669482899105491143312673511891479505493841975065506593197854563373933859484062970631020282086133726580317788686814147261443055665762279194170470889117821556057511448155304772201420474995432603770399842198556682974216041423583130319672825072375517432319682107113225384049518025577041584313165628082519292367445446767688302343260913216255312206539443598520472998076224125281289189665927681399839200548981718914506082369320777365799577907240272073180009573910551061446761272499213

# Functions to convert int to string and vice versa.
def string2int(my_str):
    return int(binascii.hexlify(my_str), 16)

def int2string(my_int):
    return binascii.unhexlify(format(my_int, "x").encode("utf-8")).decode("utf-8")


decrypted = pow(c,d,n)  # RSA Decryption.
print(decrypted)
a = int2string(decrypted)
print(a)



