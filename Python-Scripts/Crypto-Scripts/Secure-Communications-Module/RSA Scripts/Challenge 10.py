import binascii

def string2int(my_str):
    return int(binascii.hexlify(my_str), 16)

def int2string(my_int):
    return binascii.unhexlify(format(my_int, "x").encode("utf-8")).decode("utf-8")

# https://stackoverflow.com/questions/11175131/code-for-greatest-common-divisor-in-python
def gcd(a, b):
    """Calculate the Greatest Common Divisor of a and b.

    Unless b==0, the result will have the same sign as b (so that when
    b is divided by it, the result comes out positive).
    """
    while b:
        a, b = b, a%b
    return a

# https://rosettacode.org/wiki/Modular_inverse#Python
def extended_gcd(aa, bb):
    lastremainder, remainder = abs(aa), abs(bb)
    x, lastx, y, lasty = 0, 1, 1, 0
    while remainder:
        lastremainder, (quotient, remainder) = remainder, divmod(lastremainder, remainder)
        x, lastx = lastx - quotient * x, x
        y, lasty = lasty - quotient * y, y
    return lastremainder, lastx * (-1 if aa < 0 else 1), lasty * (-1 if bb < 0 else 1)

# https://rosettacode.org/wiki/Modular_inverse#Python
def modinv(a, m):
    g, x, y = extended_gcd(a, m)
    if g != 1:
        raise ValueError
    return x % m

# Check to see if the greatest common denominator is 1 for both public exponents.
d = gcd(65537,3)

# Find a and b
d1 = extended_gcd(65537,3)
print(d1)


a = -1
b = 21846
N = 26810032903919470751417184091163731146806121331508070138277149500696322442971096175884120790304857828577982069290158633180100251942955342417542170410605715464381639432699234575800532573171123313101039133182999372766586273295415906566816349148163606213448711796691911721106409801179014678228860658715782559345893999568360161119880197256475135027884453469771185252450235587582025015666381441336406498311093901010840648225477283137781817222768955048218849523758778037997640541529505267901219992736813659659861269305793309604318766412566007430086799932995256182029067580771661764264766250121073118028809461680663575310081
c1 = 7260766775102654657103431656742441990353148979141061124307181644983295046231107327430423691452627616157433441672231524455424228382285023845396142577444059128435224669183854573983185393024329156189822712662511116569420962360954623545400595204562408256820513940689193850920644698878217512292950416554931062728033829588894529471625359766244038958641807661419724452655415523369090378106418026735257613942016521972218694980364584576257654630239995015408104622801206625513029332885950345185037430856958499992603649288484209396652173200391934831459927051606716189209524840476734248211027925057233244321218681091073539258752
c2 = 11470173511333387826671287679003421156929670961823461275017682796745559415904602218760953321935593676675323236825060054973638032835676476860429091158485500015124230815770279169046878292335353131961947230502423954865968276122363702577392093721031987918924919887457819356718276460712079449251273113171432305369682840183450263334464494258055631111604123197495702165241358930802926382937042734028068862458721

# Since a is negative number, need to find multiplicative modular inverse of c1
i = modinv(c1, N)


result1=pow(c2,b,N)
result2=pow(i,-a,N)

result3=result1*result2
finalresult=result3%N


a = int2string(finalresult)
print(a)

